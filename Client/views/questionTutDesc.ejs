<!DOCTYPE html>
<html lang="zxx">
  <head>
    <meta charset="utf-8" />
    <title><%= data[0].questionName %></title>

    <!-- mobile responsive meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=1"
    />

    <!-- ** Plugins Needed for the Project ** -->
    <!-- Bootstrap -->
    <link rel="stylesheet" href="plugins/bootstrap/bootstrap.min.css" />
    <!-- slick slider -->
    <link rel="stylesheet" href="plugins/slick/slick.css" />
    <!-- themefy-icon -->
    <link rel="stylesheet" href="plugins/themify-icons/themify-icons.css" />
    <link rel="icon" type="image/png" href="../../images/logo-backup2.png" />

    <!-- Main Stylesheet -->
    <link href="css/style.css" rel="stylesheet" />

    <!--Favicon-->
    <link rel="shortcut icon" href="images/favicon.ico" type="image/x-icon" />
    <link rel="icon" href="images/favicon.ico" type="image/x-icon" />
    <link
      href="https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp"
      rel="stylesheet"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;400;500;600;700;800;900&display=swap"
      rel="stylesheet"
    />
  </head>
  <style>
    html {
      scroll-behavior: smooth;
    }
    ::-webkit-scrollbar {
      width: 0.65vw;
    }
    ::-webkit-scrollbar-track {
      border-radius: 10px;
      background: transparent;
    }
    ::-webkit-scrollbar-thumb {
      background: rgb(155, 155, 155);
      border-radius: 0.5vw;
    }
    ::-webkit-scrollbar-thumb:hover {
      background: rgb(110, 110, 110);
    }
    body {
      font-family: poppins;
      font-size: 18px;
      font-weight: 400;
      color: black;
      line-height: 25px;
      background: rgb(255, 255, 255);
      position: relative;
    }
    .setback {
      background: white;
    }
    .cover {
      padding: 30px;
    }
    h3 {
      font-weight: bold;
    }
    .questiondesc {
      text-align: justify;
    }
    .inoutformat {
      text-align: justify;
    }
    label,
    .questiondesc,
    .sampleinout,
    .questionexplain {
      white-space: pre-line;
    }
    .questionlabel {
      font-weight: bold;
      margin-bottom: 12px;
    }
    .sampleinout {
      background: rgb(241, 241, 241);
      width: 100%;
      padding: 0 3%;
      border-radius: 2mm;
      border: 0.5mm solid rgb(7, 48, 66);
    }
    .questionexplain {
      border-bottom: 0.5mm solid rgb(7, 48, 66);
      padding-bottom: 35px;
    }
    .code-ide {
      width: 97%;
      height: 97vh;
      margin: auto;
      margin-bottom: 20px;
    }
    .section-top {
      display: flex;
      align-items: center;
      justify-content: space-between;
      flex-wrap: wrap;
      padding: 22px 0;
      border-bottom: 0.6mm solid rgb(7, 48, 66);
      margin-bottom: 25px;
    }
    .heading {
      font-size: 25px;
      font-weight: 600;
    }
    .container-top {
      margin: auto;
      height: fit-content;
      display: flex;
      align-items: center;
      flex-wrap: wrap;
    }
    .container-top .icon {
      color: rgb(246, 189, 65);
    }
    .container-top .button {
      text-decoration: none;
      background: rgb(246, 189, 65);
      border: 0.5mm solid rgb(7, 48, 66);
      color: black;
      padding: 7px 10px;
      border-radius: 1mm;
      font-size: medium;
      margin: 0 2px;
    }
    .button:hover {
      background: rgb(61, 220, 132);
      color: black;
    }
    .button1,
    .button2 {
      text-decoration: none;
      background: rgb(254, 254, 254);
      border: 0.5mm solid rgb(7, 48, 66);
      color: black;
      padding: 7px 10px;
      border-radius: 1mm;
      font-size: medium;
      margin: 0 2px;
    }
    .button1:hover {
      background: rgb(236, 94, 79);
      color: black;
    }
    .button2:hover {
      background: rgb(61, 220, 132);
      color: black;
    }
    .footer-section {
      display: flex;
      align-items: center;
      justify-content: space-between;
      flex-wrap: wrap;
    }
    .bg-dark2 {
      padding-top: 20px;
      padding-bottom: 20px;
      border-top: 0.6mm solid rgb(7, 48, 66);
      background-color: rgb(255, 255, 255);
    }
    .footer-section a:hover {
      color: rgb(34, 34, 34);
    }
    .footer-left {
      width: 30%;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 30px;
    }
    .footer-right {
      width: 20%;
      align-items: center;
      justify-content: center;
    }
    .footer-left-titles a {
      text-decoration: none;
      font-family: poppins;
      font-size: x-large;
      color: rgb(54, 54, 54);
      font-weight: 600;
    }
    .footer-left-links a {
      text-decoration: none;
      font-family: poppins;
      font-size: 14px;
      color: rgb(97, 97, 97);
    }
    .footer-right p {
      font-family: poppins;
      font-size: 14px;
      color: rgb(97, 97, 97);
      width: 100%;
      text-align: center;
    }
    .discussions {
      width: 90%;
      display: block;
      margin: auto;
      position: relative;
      font-family: poppins;
      border: 0.5mm solid rgba(125, 125, 125, 0.322);
      border-radius: 3mm;
      margin-bottom: 30px;
      padding: 20px;
      margin-bottom: 250px;
    }
    .dis-title {
      font-family: poppins;
      font-size: x-large;
      padding-bottom: 10px;
    }
    .discuss-body {
      width: 100%;
      height: auto;
      max-height: 600px;
      overflow: auto;
      border-radius: 2mm;
      padding: 15px;
      margin-bottom: 200px;
    }
    .discussion {
      max-width: 95%;
      padding: 10px;
      height: fit-content;
      background: rgb(246, 246, 246);
      font-size: medium;
      border-radius: 4mm;
      margin: auto;
      margin-bottom: 20px;
    }
    .dis-user {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .img-name {
      width: fit-content;
      font-size: small;
      font-weight: 600;
    }
    .img-name img {
      width: 25px;
      height: 25px;
      border-radius: 50%;
      font-size: small;
      font-weight: 500;
    }
    .dis-roll {
      font-size: small;
      font-weight: 400;
    }
    .dis-msg {
      color: rgb(122, 122, 122);
    }
    .dis-reward {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    .date-time {
      font-size: small;
      color: rgb(122, 122, 122);
    }
    .dis-reward button {
      outline: none;
      border: none;
      display: flex;
      align-items: center;
      width: fit-content;
      justify-content: space-between;
      border-radius: 7mm;
      font-size: small;
      background: rgb(54, 54, 54);
      color: white;
      margin-top: 7px;
    }
    .dis-reward button span {
      font-size: medium;
      margin-right: 2px;
    }
    .dis-line {
      height: 20px;
      width: 0.4mm;
      background: white;
      margin: 0 5px;
    }
    .dis-b-bleft {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .dis-form {
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translate(-50%, 0);
      width: 100%;
      background: white;
      border-radius: 3mm;
    }
    .dis-form textarea {
      width: 90%;
      height: 150px;
      font-size: medium;
      outline: none;
      background: white;
      border: none;
      border-radius: 2mm;
      margin: auto;
      resize: none;
      display: block;
      border: 0.4mm solid rgba(0, 0, 0, 0.31);
      padding: 10px;
    }
    .dis-form button {
      outline: none;
      background: rgb(81, 218, 133);
      font-size: medium;
      color: black;
      padding: 5px 15px;
      border-radius: 2mm;
      border: none;
      margin: 10px;
      margin-right: 0;
      border: 0.5mm solid black;
      float: right;
      transition: 0.25s;
    }
    #status
{
  display:table;
  width:fit-content;
  height:fit-content;
  border:1px solid black;
  position: relative;
}
#status span
{
  vertical-align:middle;
  text-align:center; 
  margin:0 auto;
  font-size:50px;
  font-family:arial;
  color:#ba3fa3;  
  display:none;
}

#status.child .childWindow
{
  display:table-cell;
}

.mainWindow
{
  display: none;
  background-color:#22d86e;
}
.childWindow
{
  background: rgba( 255, 255, 255, 0.15 );
box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );
backdrop-filter: blur( 11.5px );
-webkit-backdrop-filter: blur( 11.5px );
border-radius: 10px;
border: 1px solid rgba( 255, 255, 255, 0.18 );
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw;
  line-height: 60px !important;
  box-sizing: border-box !important;
  padding: 120px;
  font-family: poppins !important;
  color: rgb(59, 196, 121) !important;
  text-shadow: 2px 2px rgba(192, 192, 192, 0.42);
  font-size: xx-large !important;
}
.childWindow .emoji{
  font-size: 80px;
  font-family: sans-serif;
  margin-bottom: 40px;
}
  </style>
  <body>
    <script>
      function close_window() {
        close();
      }
    </script>
    <!-- about -->
    <section class="section-top">
      <div class="container-top">
        <span class="material-icons-round icon"> star </span>
        <span style="font-family: poppins" class="heading">
          <%= data[0].questionName %> #<%= data[0].questionId %>
        </span>
      </div>
      <div class="container-top">
        <a href="#ide" class="button">Online Editor</a>
        <a
          href="<%= data.url %>/registerComplaint/<%= data[0].questionId %>"
          target="_blank"
          class="button2"
          >Report Issue</a
        >
        <a
          href="<%= data.url %>/complaints_public"
          class="button2"
          target="_blank"
          >Existing Complaints</a
        >
      </div>
    </section>
    <section class="section pt-8" style="padding-top: 0; padding-bottom: 20px">
      <div class="container">
        <div class="row">
          <div class="col-md-12 setback">
            <div class="cover">
              <div class="questiondesc">
                <%= data[0].questionDescriptionText %>
              </div>
              <br />
              <div class="questionlabel">Input Format</div>
              <div class="inoutformat"><%= data[0].questionInputText %></div>
              <br />
              <div class="questionlabel">Output Format</div>
              <div class="inoutformat"><%= data[0].questionOutputText %></div>
              <br />
              <div class="questionlabel">Sample Input</div>
              <div class="sampleinout">
                <%_ %><%= data[0].questionExampleInput1 %>
                <span></span>
              </div>
              <br />
              <div class="questionlabel">Sample Output</div>
              <div class="sampleinout">
                <%_ %><%= data[0].questionExampleOutput1 %>
                <span></span>
              </div>
              <br />
              <div class="questionlabel" style="margin-bottom: 0">
                Explaination
              </div>
              <div class="questionexplain">
                <%_ %><%= data[0].questionExplanation %>
              </div>
              <br />
              <br />
            </div>
          </div>
        </div>
      </div>
    </section>
    <section class="section pt-8" style="padding-top: 0">
      <div class="row">
        <iframe
          src="/ide/<%=data[0].questionId %>"
          frameborder="0"
          class="code-ide"
          id="ide"
        ></iframe>
      </div>
    </section>

    <section class="section pt-8 discussions">
      <div class="dis-title">Discussions</div>
      <div class="discuss-body">
        <% for(i=0;i<messages.length;i++) { %>
        <div class="discussion">
          <div class="dis-user">
            <div class="img-name">
              <img
                src="https://iare-data.s3.ap-south-1.amazonaws.com/uploads/STUDENTS/<%= messages[i].rollNumber.toUpperCase() %>/<%= messages[i].rollNumber.toUpperCase() %>.jpg"
                alt="img"
              />
              <span class="dis-name"><%= messages[i].rollNumber %></span>
            </div>
          </div>
          <div class="dis-msg">
            <%= messages[i].message %>
          </div>
          <div class="dis-reward">
            <% if(!(messages[i].likes.includes(imgUsername.toLowerCase()))){ %>
            <button type="button" id="<%= messages[i].discussionId %>" onclick="likeIt(this)">
              <div class="dis-b-bleft">
                <span class="material-icons-outlined"> thumb_up </span>
                Like
              </div>
              <div class="dis-line"></div>
              <div class="dis-b-right"><%= messages[i].likes.length %></div>
            </button>
            <%} else {%>
              <button type="button" style="background: rgb(180,180,180);" id="<%= messages[i].discussionId %>" onclick="likeIt(this)" disabled>
              <div class="dis-b-bleft">
                <span class="material-icons"> thumb_up </span>
                Like
              </div>
              <div class="dis-line"></div>
              <div class="dis-b-right"><%= messages[i].likes.length %></div>
            </button>
            <%}%>
            <span class="date-time"><%= new Date(messages[i].createdAt).toString().split("GMT")[0] %></span>
          </div>
        </div>
        <%}%>
      </div>
      <form action="" method="post" class="dis-form">
        <textarea
          name="discussion"
          id="dis-area"
          placeholder="Write Here..."
        ></textarea>
        <input type="hidden" name="rollNumber" />
        <span style="width: 90%; display: block; margin: auto">
          <button type="button" id="dis-sub">Post Comment</button>
        </span>
      </form>
      <script>
        function likeIt(discuss){
          try {
            var url = "<%= data.serverUrl%>/liked";
            $.ajax({
              // data: { arr: body1 },
              async: false,
              // enctype: 'multipart/form-data',
              url: url,
              headers: { Authorization: "<%=token%>" },
              type: "POST",
              data: JSON.stringify({
                rollNumber: "<%= imgUsername.toLowerCase() %>",
                discussionId:discuss.id
              }),
              cache: false,
              contentType: "application/json",
              processData: false,
              dataType: "json",
              success: function (response) {
                console.log(1)
                discuss.disabled = true;
                discuss.querySelector(".material-icons-outlined").className = "material-icons";
                discuss.style.background="rgb(180,180,180)"
              },
              error: function (error) {
                console.log(`Error ${JSON.stringify(error)}`);
              },
            });
          } catch (err) {
            console.log(err);
          }
        }
        var disSub = document.getElementById("dis-sub");
        disSub.onclick = function () {
          try {
            var url = "<%= data.serverUrl%>/discussionPost";
            $.ajax({
              // data: { arr: body1 },
              async: false,
              // enctype: 'multipart/form-data',
              url: url,
              headers: { Authorization: "<%=token%>" },
              type: "POST",
              data: JSON.stringify({
                rollNumber: "<%= imgUsername %>",
                questionId: "<%= data[0].questionId %>",
                message: document.getElementById("dis-area").value,
              }),
              cache: false,
              contentType: "application/json",
              processData: false,
              dataType: "json",
              success: function (response) {
                console.log(1);
                disSub.innerHTML = "Comment Posted";
                disSub.style.background = "rgb(96,153,246)";
                setTimeout(() => {
                  disSub.innerHTML = "Post Comment";
                  disSub.style.background = "rgb(81, 218, 133)";
                  location.reload();
                }, 2000);
              },
              error: function (error) {
                console.log(`Error ${JSON.stringify(error)}`);
              },
            });
          } catch (err) {
            console.log(err);
          }
        };
      </script>
    </section>
    <!-- jQuery -->
    <script src="plugins/jQuery/jquery.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="plugins/bootstrap/bootstrap.min.js"></script>
    <!-- slick slider -->
    <script src="plugins/slick/slick.min.js"></script>
    <!-- filter -->
    <script src="plugins/shuffle/shuffle.min.js"></script>

    <!-- Main Script -->
    <script src="js/script.js"></script>
    <footer class="bg-dark2" id="footers">
      <div class="footer-section">
        <div class="footer-left">
          <div class="footer-left-titles">
            <a href="http://buildit.iare.ac.in/" target="_blank">Build-IT</a>
          </div>
          <div class="footer-left-links">
            <a href="https://www.iare.ac.in" target="_blank">IARE</a>
          </div>
          <div class="footer-left-links">
            <a href="https://forms.gle/J6rtgiSRx4msuuQT6" target="_blank"
              >Feedback</a
            >
          </div>
        </div>
        <div class="footer-right">
          <p>
            Copyright ©
            <script>
              var CurrentYear = new Date().getFullYear();
              document.write(CurrentYear);
            </script>
          </p>
        </div>
      </div>
    </footer>
    <div id='status'> 
      <span class='mainWindow'></span>
      <span class='childWindow'>
        <div class="emoji">¯\_(ツ)_/¯</div>
        You have opened another question, please continue that question or close that tab </span>
    </div>
    <script>
      var statusWindow = document.getElementById('status');

(function (win)
{
    //Private variables
    var _LOCALSTORAGE_KEY = 'WINDOW_VALIDATION';
    var RECHECK_WINDOW_DELAY_MS = 100;
    var _initialized = false;
    var _isMainWindow = false;
    var _unloaded = false;
    var _windowArray;
    var _windowId;
    var _isNewWindowPromotedToMain = false;
    var _onWindowUpdated;

    
    function WindowStateManager(isNewWindowPromotedToMain, onWindowUpdated)
    {
        //this.resetWindows();
        _onWindowUpdated = onWindowUpdated;
        _isNewWindowPromotedToMain = isNewWindowPromotedToMain;
        _windowId = Date.now().toString();

        bindUnload();

        determineWindowState.call(this);

        _initialized = true;

        _onWindowUpdated.call(this);
    }

    //Determine the state of the window 
    //If its a main or child window
    function determineWindowState()
    {
        var self = this;
        var _previousState = _isMainWindow;

        _windowArray = localStorage.getItem(_LOCALSTORAGE_KEY);

        if (_windowArray === null || _windowArray === "NaN")
        {
            _windowArray = [];
        }
        else
        {
            _windowArray = JSON.parse(_windowArray);
        }

        if (_initialized)
        {
            //Determine if this window should be promoted
            if (_windowArray.length <= 1 ||
               (_isNewWindowPromotedToMain ? _windowArray[_windowArray.length - 1] : _windowArray[0]) === _windowId)
            {
                _isMainWindow = true;
            }
            else
            {
                _isMainWindow = false;
            }
        }
        else
        {
            if (_windowArray.length === 0)
            {
                _isMainWindow = true;
                _windowArray[0] = _windowId;
                localStorage.setItem(_LOCALSTORAGE_KEY, JSON.stringify(_windowArray));
            }
            else
            {
                _isMainWindow = false;
                _windowArray.push(_windowId);
                localStorage.setItem(_LOCALSTORAGE_KEY, JSON.stringify(_windowArray));
            }
        }

        //If the window state has been updated invoke callback
        if (_previousState !== _isMainWindow)
        {
            _onWindowUpdated.call(this);
        }

        //Perform a recheck of the window on a delay
        setTimeout(function()
                   {
                     determineWindowState.call(self);
                   }, RECHECK_WINDOW_DELAY_MS);
    }

    //Remove the window from the global count
    function removeWindow()
    {
        var __windowArray = JSON.parse(localStorage.getItem(_LOCALSTORAGE_KEY));
        for (var i = 0, length = __windowArray.length; i < length; i++)
        {
            if (__windowArray[i] === _windowId)
            {
                __windowArray.splice(i, 1);
                break;
            }
        }
        //Update the local storage with the new array
        localStorage.setItem(_LOCALSTORAGE_KEY, JSON.stringify(__windowArray));
    }

    //Bind unloading events  
    function bindUnload()
    {
        win.addEventListener('beforeunload', function ()
        {
            if (!_unloaded)
            {
                removeWindow();
            }
        });
        win.addEventListener('unload', function ()
        {
            if (!_unloaded)
            {
                removeWindow();
            }
        });
    }

    WindowStateManager.prototype.isMainWindow = function ()
    {
        return _isMainWindow;
    };

    WindowStateManager.prototype.resetWindows = function ()
    {
        localStorage.removeItem(_LOCALSTORAGE_KEY);
    };

    win.WindowStateManager = WindowStateManager;
})(window);

var WindowStateManager = new WindowStateManager(false, windowUpdated);

function windowUpdated()
{
    //"this" is a reference to the WindowStateManager
    statusWindow.className = (this.isMainWindow() ? 'main' : 'child');
}
    </script>
  </body>
</html>
